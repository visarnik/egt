name: Build App

on:
  push:
    branches:
    - main

permissions:
  packages: write

jobs:

  Linting:
    name: 'Linting'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Run linting'
        run: make lint
  
  test:
    name: 'Tests'
    needs: Linting
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Run tests'
        run: make test-report

      - name: 'Upload test results'
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test-results
          path: ./src/mochawesome-report
  Sonar:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
  
 
  Snyk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: build
        run: |
          cd src
          npm install
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: |
            test
          args: |
            --file=src/package.json
            --severity-threshold=critical


  build:
    name: 'Build & Push Image'
    needs: Sonar
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout 
        uses: actions/checkout@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./build/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USER }}/telerikdemo:${{github.sha}}
            ${{ secrets.DOCKERHUB_USER }}/telerikdemo:latest
          #cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USER }}/telerikdemo:buildcache
          #cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USER }}/telerikdemo:buildcache,mode=max
      